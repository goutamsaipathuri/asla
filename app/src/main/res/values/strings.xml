<resources>
    <string name="app_name">ASLA</string>
    <string name="tutorial">Tutorial</string>
    <string name="description">description</string>
    <string name="articles">Articles</string>
    <string name="faq">F.A.Q</string>
    <string name="quiz">Quiz</string>
    <string name="beginner">Beginner</string>
    <string name="intermediate">Intermediate</string>
    <string name="advanced">Advanced</string>
    <string name="general">General</string>g
    <string name="specific">Project specific</string>
    <string name="easy">Easy</string>
    <string name="medium">Medium</string>
    <string name="hard">Hard</string>
    <string name="contact_us">Contact us</string>
    <string name="help">Help</string>
    <string name="next">NEXT</string>
    <string name="skip">SKIP</string>
    <string name="got_it">GOT IT</string>
    
    <string name="_111_t">What is AUTOSAR?</string>
    <string name="_112_t">Why AUTOSAR?</string>
    <string name="_113_t">Who is AUTOSAR?</string>
    <string name="_114_t">Objectives of AUTOSAR</string>
    <string name="_115_t">Key focus of AUTOSAR</string>
    <string name="_116_t">AUTOSAR Roadmap</string>
    <string name="_117_t">Reach and Access AUTOSAR</string>
    <string name="_121_t">Layered Software Architecture</string>
    <string name="_122_t">Methodology</string>
    <string name="_123_t">Configuration Classes</string>
    <string name="_124_t">Conformance Classes</string>
    <string name="_211_t">Brief on Diagnostic modules</string>
    <string name="_212_t">DCM module</string>
    <string name="_213_t">DEM module</string>
    <string name="_214_t">Interaction between DCM, DEM and Application</string>
    <string name="_215_t">DET module</string>
    <string name="_216_t">FIM module</string>
    <string name="_221_t">Mode managers in AUTOSAR</string>
    <string name="_222_t">EcuM module</string>
    <string name="_223_t">WdgM module</string>
    <string name="_224_t">ComM module</string>
    <string name="_231_t">What are CDDs</string>
    <string name="_232_t">Interaction with CDDs</string>
    <string name="_233_t">What can be designed as CDDs?</string>
    <string name="_234_t">CDD as a Ser vice SW-C</string>
    <string name="_311_t">Introduction</string>
    <string name="_3120_t">Sub-Layers</string>
    <string name="_3121_t">Services Layer</string>
    <string name="_3122_t">ECU Abstraction Layer</string>
    <string name="_3123_t">Complex Device Drivers (CDD)</string>
    <string name="_3124_t">Micro Controller Abstraction Layer (MCAL)</string>
    <string name="_321_t">COM Stack basics</string>
    <string name="_322_t">COM Module</string>
    <string name="_323_t">PduR Module</string>
    <string name="_324_t">IPDU-M Module</string>
    <string name="_3250_t">FR/ CAN/ LIN Stack</string>
    <string name="_3251_t">Basics</string>
    <string name="_3252_t">Hardware Configuration</string>
    <string name="_411_t">Memory Stack basics</string>
    <string name="_412_t">NVRAM Manager Module</string>
    <string name="_413_t">NVRAM Manager as a Service SW-C</string>
    <string name="_414_t">MemIf module</string>
    <string name="_415_t">Flash/ Eeprom Stack</string>
    <string name="_421_t">Introduction</string>
    <string name="_4220_t">Features of OS</string>
    <string name="_4221_t">Fundamentals of AUTOSAR OS</string>
    <string name="_4222_t">Extensions to and restrictions on OSEK OS</string>
    <string name="_4223_t">OS Tasks</string>
    <string name="_4224_t">OS counters</string>
    <string name="_4225_t">OS Alarms</string>
    <string name="_4226_t">OS Events</string>
    <string name="_4227_t">OS Scheduler and Schedule tables</string>
    <string name="_4228_t">Schedule table Synchronization</string>
    <string name="_4229_t">ISRs and types</string>
    <string name="_42210_t">OS Resources</string>
    <string name="_42211_t">OS Protection</string>
    <string name="_42212_t">OS Hooks</string>
    <string name="_42213_t">Services to SchM</string>
    <string name="_423_t">OS Scalability classes</string>
    <string name="_431_t">Basics of Measurement and Calibration</string>
    <string name="_432_t">XCP module</string>
    <string name="_433_t">Calibration with FR/ CAN</string>
    <string name="_434_t">Interaction of XCP module</string>
    <string name="_511_t">Introduction</string>
    <string name="_512_t">RTE Concepts</string>
    <string name="_513_t">Calibration</string>


    <string name="a1">
        The interoperability of solutions requires a high quality standard. AUTOSAR has defined a process to ensure such high quality when changes are introduced in a revision or when new features are introduced in new minor or major releases.
        \n\n
        AUTOSAR is also continuously monitoring the interoperability of AUTOSAR tool chain solutions and provide acceptance tests for the Classic Platform which enable an early assessment of suppliers’ basic software solutions in a development process.
        \n\n
        AUTOSAR’s Adaptive Platform is designed for interoperability with other software platforms. By using dynamic service oriented communication patterns, applications can easily exchange information with for example infotainment systems.
    </string>
    <string name="a2">
        New use-cases require the development of the Adaptive Platform.
        \n
        Highly automated driving where the driver temporarily and/or partially passes responsibility for driving to the vehicle. This requires for instance communication with traffic lights, the use of high-performance micro-controllers and computing.
        \n\n
        Car-2-X applications require interaction to vehicles and off-board systems. That means the system has to provide secure on-board communication, support of cross domain computing platforms, smartphone integration, integration of non-AUTOSAR systems, and so on.
        \n\n
        Cloud based services will require dedicated means for security such as secure cloud interaction and emergency vehicle preemption. They will enable remote and distributed services, for instance remote diagnostics, in-field flashing, repair and exchange handling.
    </string>
    <string name="a3">
        The Classic Platform is the first choice for deeply embedded ECUs with high demands regarding safety and deterministic execution. It targets small and medium sized microcontrollers.
        \n\n
        The Adaptive Platform supports adaptive deployment of applications and interaction with Classic Platform and non-AUTOSAR systems. It targets high performance microcontrollers.
    </string>
    <string name="a4">
        Updates and improvements of the standard will be introduced by future versions of AUTOSAR. Corrections are handled by a change management process and are provided as revisions of the existing releases. New features are matured in concepts which are introduced only in new releases. New minor releases accept only backward compatible features whereas major releases could introduce non backward compatible features. The AUTOSAR versions are numbered according to this scheme: &lt;major release&gt;.&lt;minor release&gt;.&lt;revision&gt;.
        \n\n
        AUTOSAR’s standard Adaptive Platform makes use of agile development methods. That means functions and updates are developed in sprints. There is a regular release cycle to introduce those functions and updates into the market.
    </string>
    <string name="a5">
        Yes, AUTOSAR provides application interfaces for Body, Chassis, Pedestrian and Occupant Safety, and Powertrain applications.
    </string>
    <string name="a6">
        One of the main requirements of AUTOSAR is to assure the interoperability with legacy software. This will enable the re-use of existing, non-AUTOSAR compliant software, e.g. drivers. The most obvious way to reach this integration is using a Complex Driver as a wrapper around the non-AUTOSAR compliant software.
    </string>
    <string name="a7">
        The acceptance of AUTOSAR will depend heavily on processing and memory requirements. The modular architecture of AUTOSAR provides a scalable solution where users or implementers can discard modules or configure out features of the basic software in order to limit the memory and performance impacts in micro controllers.
    </string>
    <string name="a8">
        Using and implementing existing standards is given the highest priority.
        \n\n
        This has been the case since the beginning of the project. For example AUTOSAR’s operating system and communication stack were based on OSEK, and the AUTOSAR System Template was based on ASAM. Furthermore AUTOSAR introduces support for new standard when there is a market need for the automotive industry.
        \n\n
        As AUTOSAR members also participate to the elaboration of other standard, it has been possible to provide, with AUTOSAR, and standardized software solution to implement other standard as soon as they are published. For instance functional safety mechanisms were added to support ISO 26262, and the partial networking or Can FD concepts were introduced to support new versions of ISO 11898.
    </string>

</resources>
